<!DOCTYPE html>
<html lang="en">

<head>

    <title>Create new task - Create a new task with necessary details</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" type="image/png" href="static/favicon-32x32.png">

    <!-- Bootstrap v5.1.3 CDNs -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- CSS File -->
    <link rel="stylesheet" href="css/dashboard.css">

</head>

<body>

    <div class="create-task">

        <h1 class="text-center"><img src="static/cognizant-logo-with-name.jpg" height="80" width="300" alt=""></h1>

        <form class="needs-validation" action="/send-otp" method="post">
            <div class="form-group create-new-task-size">
                <label class="form-label" for="receivers">Receiver's Email ID/IDs</label>
                <input class="form-control create-task-input" type="text" id="receivers" name="receivers_email_id"
                    placeholder="Enter all the email ids in a comma seperated way (like - rupam@cognizant.com,sarfaraz@cognizant.com)."
                    required>

                <label class="form-label" for="task-name">Task name</label>
                <input class="form-control create-task-input" type="text" id="task-name" name="task-name"
                    placeholder="Enter the task name" required>

                <label class="form-label" for="task-details">Task details</label>
                <textarea class="form-control create-task-input" name="task-details" id="task-details" rows="10"
                    placeholder="Enter the task details" required></textarea>


                <label class="form-label">Severity of the task</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="severity" id="high" value="high">
                    <label class="form-check-label" for="high">
                        High
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="severity" id="moderate" value="moderate">
                    <label class="form-check-label" for="moderate">
                        Moderate
                    </label>
                </div>
                <div class="form-check create-task-input">
                    <input class="form-check-input" type="radio" name="severity" id="low" value="low">
                    <label class="form-check-label" for="low">
                        Low
                    </label>
                </div>

                <label class="form-label" for="cc">CCs</label>
                <input class="form-control create-task-input" type="text" id="cc" name="cc"
                    placeholder="Enter all the CCs in comma seperated way (like - xyz@cognizant.com, abc@cognizant.com). skip if no CC is there.">

                <div class="cc-skip-group">
                    <label for="cc-times" class="form-label">How many times CC will be skipped (If any).</label>
                    <input class="form-control create-task-input" type="number" id="cc-times" name="cc-times" min="1"
                        max="5" value="0" onchange="this.value = Math.max(1, Math.min(5, this.value));">
                </div>

                <label class="form-label" for="bcc">BCCs</label>
                <input class="form-control create-task-input" type="text" id="bcc" name="bcc"
                    placeholder="Enter all the BCCs in comma seperated way (like - xyz@cognizant.com, abc@cognizant.com). skip if no BCC is there.">

                <div class="bcc-skip-group">
                    <label for="bcc-times" class="form-label">How many times BCC will be skipped (If any).</label>
                    <input class="form-control create-task-input" type="number" id="bcc-times" name="bcc-times" min="1"
                        max="5" value="0" onchange="this.value = Math.max(1, Math.min(5, this.value));">
                </div>

                <label class="form-label">Task recurrence pattern</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="recurrence" id="custom" value="custom">
                    <label class="form-check-label" for="custom">
                        Custom date
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="recurrence" id="daily" value="daily">
                    <label class="form-check-label" for="daily">
                        Daily
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="recurrence" id="weekly" value="weekly">
                    <label class="form-check-label" for="weekly">
                        Weekly
                    </label>
                </div>
                <div class="form-check create-task-input">
                    <input class="form-check-input" type="radio" name="recurrence" id="monthly" value="monthly">
                    <label class="form-check-label" for="monthly">
                        Monthly
                    </label>
                </div>

                <div class="recurrence-patteren">

                    <div class="create-task-input" id="custom-dates-list"></div>
                    <div class="custom-date-label">
                        <label class="form-label" for="custom-start-date">Task Trigger Date</label>
                        <label class="form-label custom-end-date-label" for="custom-end-date">Task Completed By:</label>
                    </div>
                    <div class="custom-date">
                        <input class="form-control" type="date" id="custom-start-date" name="custom-date" required>
                        <input class="form-control" type="date" id="custom-end-date" name="custom-end-date" required>
                    </div>
                    <button id="add-custom-date" class="btn btn-success">Add Date</button>

                    <input class="form-check-input create-task-input" type="checkbox" id="email-needed"
                        name="email-needed" required>
                    <label class="form-label"> Do you want to call a meeting on some specific date</label>

                    <div class="email-needed-div">
                        <h1>Email Needed</h1>
                    </div>

                </div>
                <div class="recurrence-patteren">
                    <h1>Hi</h1>
                </div>
                <div class="recurrence-patteren">
                    <h1>Java</h1>
                </div>
                <div class="recurrence-patteren">
                    <h1>Python</h1>
                </div>

            </div>
            <input class="btn btn-success w-100" type="submit" value="Get OTP">
        </form>

    </div>
    <script>
        const ccInput = document.getElementById('cc');
        const bccInput = document.getElementById('bcc');
        const ccSkipGroup = document.getElementsByClassName('cc-skip-group')[0];
        const bccSkipGroup = document.getElementsByClassName('bcc-skip-group')[0];

        function checkInputsCcBcc() {
            if (ccInput.value) {
                ccSkipGroup.classList.remove('d-none');
            } else {
                ccSkipGroup.classList.add('d-none');
            }

            if (bccInput.value) {
                bccSkipGroup.classList.remove('d-none');
            } else {
                bccSkipGroup.classList.add('d-none');
            }
        }

        ccInput.addEventListener('input', function () {
            checkInputsCcBcc();
        });

        bccInput.addEventListener('input', function () {
            checkInputsCcBcc();
        });

        // call the function once on page load
        checkInputsCcBcc();

        // ------------------------------------------------------------------------------------------------------ //

        const customClass = document.getElementsByClassName('recurrence-patteren')[0];
        const dailyClass = document.getElementsByClassName('recurrence-patteren')[1];
        const weeklyClass = document.getElementsByClassName('recurrence-patteren')[2];
        const monthlyClass = document.getElementsByClassName('recurrence-patteren')[3];

        const customRadio = document.getElementById('custom');
        const dailyRadio = document.getElementById('daily');
        const weeklyRadio = document.getElementById('weekly');
        const monthlyRadio = document.getElementById('monthly');

        function showDiv(div) {
            div.classList.remove('d-none');
            div.scrollIntoView({ behavior: 'smooth' });
        }

        function hideDiv(div) {
            div.classList.add('d-none');
        }


        function activateRecurrencePatteren() {
            // Hide all the divs on page load
            hideDiv(customClass);
            hideDiv(dailyClass);
            hideDiv(weeklyClass);
            hideDiv(monthlyClass);

            customRadio.addEventListener('click', function () {
                showDiv(customClass);
                hideDiv(dailyClass);
                hideDiv(weeklyClass);
                hideDiv(monthlyClass);
            });

            dailyRadio.addEventListener('click', function () {
                hideDiv(customClass);
                showDiv(dailyClass);
                hideDiv(weeklyClass);
                hideDiv(monthlyClass);
            });

            weeklyRadio.addEventListener('click', function () {
                hideDiv(customClass);
                hideDiv(dailyClass);
                showDiv(weeklyClass);
                hideDiv(monthlyClass);
            });

            monthlyRadio.addEventListener('click', function () {
                hideDiv(customClass);
                hideDiv(dailyClass);
                hideDiv(weeklyClass);
                showDiv(monthlyClass);
            });
        }

        activateRecurrencePatteren();

        // ---------------------------------------------------------------------------------------

        const startDateInput = document.getElementById("custom-start-date");
        const endDateInput = document.getElementById("custom-end-date");
        const addButton = document.getElementById("add-custom-date");
        const datesList = document.getElementById("custom-dates-list");
        const dates = [];

        addButton.addEventListener("click", function (event) {
            event.preventDefault(); // prevent form submission

            const startDate = startDateInput.value;
            const endDate = endDateInput.value;

            if (!startDate || !endDate) {
                alert("Please enter the start and end date");
                return;
            }

            dates.push([startDate, endDate]);
            let output = '';
            for (let i = 0; i < dates.length; i++) {
                // console.log(typeof(dates[i][0]));
                output += `${i + 1}. Trigger date: ${dates[i][0]} || Completed By: ${dates[i][1]} <br/>`;
                // output += dates[i][0] + ' - ' + dates[i][1] + '\n'
            }

            datesList.innerHTML = output;

            // scroll to the bottom of the page
            // Scroll to the button
            // scroll to the new date element
            const newDateElement = datesList.lastElementChild;
            newDateElement.scrollIntoView({ behavior: "smooth" });

            startDateInput.value = "";
            endDateInput.value = "";
        });

        // ------------------------------------------------------------------------------------------

        const emailNeededCheckbox = document.getElementById("email-needed");
        const emailNeededDiv = document.querySelector(".email-needed-div");

        emailNeededCheckbox.addEventListener("change", function () {
            if (this.checked) {
                emailNeededDiv.style.display = "block";
                // scrolls to bottom of the page
                emailNeededCheckbox.scrollIntoView({ behavior: 'smooth' });
            } else {
                emailNeededDiv.style.display = "none";
            }
        });




    </script>
</body>

</html>